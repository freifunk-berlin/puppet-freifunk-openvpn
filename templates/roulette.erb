#!/bin/sh -e
#
# rc.roulette
#
# This script is also executed via rc.local and openvpn e.g. start

INET_DEV=eth0			# External interface
INET_ADD=77.87.49		# Additional IPs
INET_MIN=1
INET_MAX=62
INET_RNG=$(((${INET_MAX} - ${INET_MIN}) + 1))
VPN_DEVS="tun-melle tun-tcp tun-udp" # openvpn tunnel intefaces
MESH_NET="6.0.0.0/8 10.0.0.0/8 172.16.0.0/12"

# Sven-Ola: SNAT-Konfiguration (Fuer fixed IPs, sonst waere es ein MASQUERADE)
# Ohne 192.168.0.0/16: Absicht, ein Mesh mit diesen IPs evnt. Sicherheitsprobs
# Beschraenkung auf diese IP-Bereiche spart auszerdem Conntrack-Eintraege
# Source-IP-Match-Marks werden in openvpn/openvpn-updown-mark-snat aufgesetzt

RND=$(openssl rand -hex 4)
echo ${RND} > /var/run/roulette-xor.txt

# flush rules
iptables -t mangle -F
iptables -t nat -F POSTROUTING

# create mark rules
for dev in ${VPN_DEVS}; do
	iptables -t mangle -A PREROUTING -i ${dev} \
		-j HMARK \
		--hmark-tuple src \
		--hmark-offset ${INET_MIN} \
		--hmark-mod ${INET_RNG} \
		--hmark-rnd "0x${RND}"
done

# Neue chain: ROULETTE
if iptables -t nat -F ROULETTE 2>&-;then
	iptables -t nat -X ROULETTE
fi

# create SNAT rules for ROULETTE
# use mark created by HMARK
iptables -t nat -N ROULETTE
for ip in $(seq ${INET_MIN} 1 ${INET_MAX}); do
	iptables -t nat -A ROULETTE \
	-m mark --mark ${ip} \
	-j SNAT --to ${INET_ADD}.${ip}
done

# Definieren, welche Source-IPs in das ROULETTE kommen
for net in ${MESH_NET} "104.0.0.0/8";do
	iptables -t nat -A POSTROUTING -o ${INET_DEV} -s ${net} -j ROULETTE
done
